/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetpasswordImport } from './routes/reset_password'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotpasswordImport } from './routes/forgot_password'
import { Route as RoomIndexImport } from './routes/room/index'
import { Route as RoomRoomIdImport } from './routes/room/$roomId'
import { Route as authDashboardImport } from './routes/(auth)/dashboard'

// Create Virtual Routes

const FeaturesLazyImport = createFileRoute('/features')()
const ContactLazyImport = createFileRoute('/contact')()
const AboutLazyImport = createFileRoute('/about')()
const R404LazyImport = createFileRoute('/404')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const FeaturesLazyRoute = FeaturesLazyImport.update({
  path: '/features',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/features.lazy').then((d) => d.Route))

const ContactLazyRoute = ContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const R404LazyRoute = R404LazyImport.update({
  path: '/404',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/404.lazy').then((d) => d.Route))

const ResetpasswordRoute = ResetpasswordImport.update({
  path: '/reset_password',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotpasswordRoute = ForgotpasswordImport.update({
  path: '/forgot_password',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const RoomIndexRoute = RoomIndexImport.update({
  path: '/room/',
  getParentRoute: () => rootRoute,
} as any)

const RoomRoomIdRoute = RoomRoomIdImport.update({
  path: '/room/$roomId',
  getParentRoute: () => rootRoute,
} as any)

const authDashboardRoute = authDashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/forgot_password': {
      id: '/forgot_password'
      path: '/forgot_password'
      fullPath: '/forgot_password'
      preLoaderRoute: typeof ForgotpasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/reset_password': {
      id: '/reset_password'
      path: '/reset_password'
      fullPath: '/reset_password'
      preLoaderRoute: typeof ResetpasswordImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404LazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/features': {
      id: '/features'
      path: '/features'
      fullPath: '/features'
      preLoaderRoute: typeof FeaturesLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authDashboardImport
      parentRoute: typeof rootRoute
    }
    '/room/$roomId': {
      id: '/room/$roomId'
      path: '/room/$roomId'
      fullPath: '/room/$roomId'
      preLoaderRoute: typeof RoomRoomIdImport
      parentRoute: typeof rootRoute
    }
    '/room/': {
      id: '/room/'
      path: '/room'
      fullPath: '/room'
      preLoaderRoute: typeof RoomIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/forgot_password': typeof ForgotpasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset_password': typeof ResetpasswordRoute
  '/404': typeof R404LazyRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/features': typeof FeaturesLazyRoute
  '/dashboard': typeof authDashboardRoute
  '/room/$roomId': typeof RoomRoomIdRoute
  '/room': typeof RoomIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/forgot_password': typeof ForgotpasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset_password': typeof ResetpasswordRoute
  '/404': typeof R404LazyRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/features': typeof FeaturesLazyRoute
  '/dashboard': typeof authDashboardRoute
  '/room/$roomId': typeof RoomRoomIdRoute
  '/room': typeof RoomIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/forgot_password': typeof ForgotpasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset_password': typeof ResetpasswordRoute
  '/404': typeof R404LazyRoute
  '/about': typeof AboutLazyRoute
  '/contact': typeof ContactLazyRoute
  '/features': typeof FeaturesLazyRoute
  '/dashboard': typeof authDashboardRoute
  '/room/$roomId': typeof RoomRoomIdRoute
  '/room/': typeof RoomIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot_password'
    | '/login'
    | '/register'
    | '/reset_password'
    | '/404'
    | '/about'
    | '/contact'
    | '/features'
    | '/dashboard'
    | '/room/$roomId'
    | '/room'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot_password'
    | '/login'
    | '/register'
    | '/reset_password'
    | '/404'
    | '/about'
    | '/contact'
    | '/features'
    | '/dashboard'
    | '/room/$roomId'
    | '/room'
  id:
    | '__root__'
    | '/'
    | '/forgot_password'
    | '/login'
    | '/register'
    | '/reset_password'
    | '/404'
    | '/about'
    | '/contact'
    | '/features'
    | '/dashboard'
    | '/room/$roomId'
    | '/room/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  ForgotpasswordRoute: typeof ForgotpasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ResetpasswordRoute: typeof ResetpasswordRoute
  R404LazyRoute: typeof R404LazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  FeaturesLazyRoute: typeof FeaturesLazyRoute
  authDashboardRoute: typeof authDashboardRoute
  RoomRoomIdRoute: typeof RoomRoomIdRoute
  RoomIndexRoute: typeof RoomIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  ForgotpasswordRoute: ForgotpasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ResetpasswordRoute: ResetpasswordRoute,
  R404LazyRoute: R404LazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  FeaturesLazyRoute: FeaturesLazyRoute,
  authDashboardRoute: authDashboardRoute,
  RoomRoomIdRoute: RoomRoomIdRoute,
  RoomIndexRoute: RoomIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forgot_password",
        "/login",
        "/register",
        "/reset_password",
        "/404",
        "/about",
        "/contact",
        "/features",
        "/dashboard",
        "/room/$roomId",
        "/room/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/forgot_password": {
      "filePath": "forgot_password.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/reset_password": {
      "filePath": "reset_password.tsx"
    },
    "/404": {
      "filePath": "404.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/features": {
      "filePath": "features.lazy.tsx"
    },
    "/dashboard": {
      "filePath": "(auth)/dashboard.tsx"
    },
    "/room/$roomId": {
      "filePath": "room/$roomId.tsx"
    },
    "/room/": {
      "filePath": "room/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
