services:
    frontend:
        build:
            context: frontend
            dockerfile: Dockerfile
        # command: pnpm dev
        container_name: "frontend"
        restart: always
        working_dir: /app
        ports:
            - 3000:3000
        volumes:
            - ./frontend:/app:cached
            - /app/node_modules
        # develop:
        #   watch:
        #     - path: ./frontend/package.json
        #       action: rebuild
        #     - path: ./frontend
        #       target: /app
        #       action: sync
        #       ignore:
        #         - node_modules/

    hc_db:
        image: postgres:latest
        container_name: hc_db
        restart: always
        ports:
            - "${DB_PORT}:5432"
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
        volumes:
            - hc_pgsql:/var/lib/postgresql/data

    hc_pgadmin:
        image: dpage/pgadmin4
        container_name: hc_pgadmin
        depends_on:
            - hc_db
        restart: always
        ports:
            - "5050:80"
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - hc_pgadmin:/var/lib/pgadmin

    # mailhog:
    #   image: mailhog/mailhog:latest
    #   container_name: mailhog
    #   restart: always
    #   logging:
    #     driver: "none"
    #   ports:
    #     - "1025:1025" # SMTP port
    #     - "8025:8025" # Web UI port

volumes:
    hc_pgsql:
    hc_pgadmin:
    # frontend:
